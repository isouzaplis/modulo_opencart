
<modification>
	<id>módulo de CPF CNPJ Razão Social Inscrição Estadual e Data de nascimento - parte loja geral</id>
	<version>1.0.1</version>
	<vqmver>2.1.5</vqmver>
	<author>Jeann e-mail: jeann@surgimento.com.br twiter: @surgimento site: http://www.surgimento.com.br/ </author>
	
	<!-- BLOCO GERAL DE MODEL E CABEÇALHO -->
	<file name="catalog/model/account/customer.php">
		<operation> <!-- linha 14 geral - adiciona juntos cpf, cnpj, razao_social, inscricao_estadual, ddd, data_nascimento  -->
			<search position="replace" ><![CDATA[
				$this->db->query("INSERT INTO " . DB_PREFIX . "customer SET store_id = '" . (int)$this->config->get('config_store_id') . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "', newsletter = '" . (isset($data['newsletter']) ? (int)$data['newsletter'] : 0) . "', customer_group_id = '" . (int)$customer_group_id . "', ip = '" . $this->db->escape($this->request->server['REMOTE_ADDR']) . "', status = '1', approved = '" . (int)!$customer_group_info['approval'] . "', date_added = NOW()");
			]]></search>
			<add><![CDATA[
			if ($this->config->get('dados_status')){ 
				if ($data['data_nascimento'] == ""){
					$dataparts[0] = "00";
					$dataparts[1] = "00";
					$dataparts[2] = "0000";
				}else{
					$dataparts = explode("/",$data['data_nascimento']);
				}
				// adiciona juntos cpf, cnpj, razao_social, inscricao_estadual, ddd, data_nascimento	
				$this->db->query("INSERT INTO " . DB_PREFIX . "customer SET store_id = '" . (int)$this->config->get('config_store_id') . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "',cpf = '" . $this->db->escape($data['cpf']) . "',cnpj = '" . $this->db->escape($data['cnpj']) . "',razao_social = '" . $this->db->escape($data['razao_social']) . "',inscricao_estadual = '" . $this->db->escape($data['inscricao_estadual']) . "',ddd = '" . $this->db->escape($data['ddd']) . "',data_nascimento = '" . $this->db->escape($dataparts[2]."-".$dataparts[1]."-".$dataparts[0]) . "',  fax = '', salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "', newsletter = '" . (isset($data['newsletter']) ? (int)$data['newsletter'] : 0) . "', customer_group_id = '" . (int)$customer_group_id . "', ip = '" . $this->db->escape($this->request->server['REMOTE_ADDR']) . "', status = '1', approved = '" . (int)!$customer_group_info['approval'] . "', date_added = NOW()");
			}else{
				$this->db->query("INSERT INTO " . DB_PREFIX . "customer SET store_id = '" . (int)$this->config->get('config_store_id') . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "', newsletter = '" . (isset($data['newsletter']) ? (int)$data['newsletter'] : 0) . "', customer_group_id = '" . (int)$customer_group_id . "', ip = '" . $this->db->escape($this->request->server['REMOTE_ADDR']) . "', status = '1', approved = '" . (int)!$customer_group_info['approval'] . "', date_added = NOW()");
			}			
	
			]]></add>
		</operation>
		<operation> <!-- linha 18 geral - Insere campo numero e comprovante na tabela address  -->
			<search position="replace" ><![CDATA[			
			$this->db->query("INSERT INTO " . DB_PREFIX . "address SET customer_id = '" . (int)$customer_id . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', company = '" . $this->db->escape($data['company']) . "', company_id = '" . $this->db->escape($data['company_id']) . "', tax_id = '" . $this->db->escape($data['tax_id']) . "', address_1 = '" . $this->db->escape($data['address_1']) . "', address_2 = '" . $this->db->escape($data['address_2']) . "', city = '" . $this->db->escape($data['city']) . "', postcode = '" . $this->db->escape($data['postcode']) . "', country_id = '" . (int)$data['country_id'] . "', zone_id = '" . (int)$data['zone_id'] . "'");
			]]></search>
			<add><![CDATA[
			if ($this->config->get('dados_status')){ 
				// adiciona campos novos numero e complemento
				$this->db->query("INSERT INTO " . DB_PREFIX . "address SET customer_id = '" . (int)$customer_id . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = ' ', company = ' ', company_id = ' ', tax_id = ' ', address_1 = '" . $this->db->escape($data['address_1']) . "', numero = '" . $this->db->escape($data['numero']) . "',complemento = '" . $this->db->escape($data['complemento']) . "', address_2 = '" . $this->db->escape($data['address_2']) . "', city = '" . $this->db->escape($data['city']) . "', postcode = '" . $this->db->escape($data['postcode']) . "', country_id = '" . (int)$data['country_id'] . "', zone_id = '" . (int)$data['zone_id'] . "'");
			}else{
				$this->db->query("INSERT INTO " . DB_PREFIX . "address SET customer_id = '" . (int)$customer_id . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', company = '" . $this->db->escape($data['company']) . "', company_id = '" . $this->db->escape($data['company_id']) . "', tax_id = '" . $this->db->escape($data['tax_id']) . "', address_1 = '" . $this->db->escape($data['address_1']) . "', address_2 = '" . $this->db->escape($data['address_2']) . "', city = '" . $this->db->escape($data['city']) . "', postcode = '" . $this->db->escape($data['postcode']) . "', country_id = '" . (int)$data['country_id'] . "', zone_id = '" . (int)$data['zone_id'] . "'");
			}			
			]]></add>
		</operation>
		
		<operation> <!-- linha 74 geral - adiciona juntos cpf, cnpj, razao_social, inscricao_estadual, ddd, data_nascimento  -->
			<search position="replace"><![CDATA[
				$this->db->query("UPDATE " . DB_PREFIX . "customer SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "' WHERE customer_id = '" . (int)$this->customer->getId() . "'");
			]]></search>
			<add><![CDATA[
			if ($this->config->get('dados_status')){ 
				if ($data['data_nascimento'] == ""){
					$dataparts[0] = "00";
					$dataparts[1] = "00";
					$dataparts[2] = "0000";
				}else{
					$dataparts = explode("/",$data['data_nascimento']);
				}
				// adiciona juntos cpf, cnpj, razao_social, inscricao_estadual, ddd, data_nascimento
				$this->db->query("UPDATE " . DB_PREFIX . "customer SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "',cpf = '" . $this->db->escape($data['cpf']) . "',cnpj = '" . $this->db->escape($data['cnpj']) . "',razao_social = '" . $this->db->escape($data['razao_social']) . "',inscricao_estadual = '" . $this->db->escape($data['inscricao_estadual']) . "',ddd = '" . $this->db->escape($data['ddd']) . "',data_nascimento = '" . $this->db->escape($dataparts[2]."-".$dataparts[1]."-".$dataparts[0]) . "', fax = '' WHERE customer_id = '" . (int)$this->customer->getId() . "'");
			}else{
				$this->db->query("UPDATE " . DB_PREFIX . "customer SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "' WHERE customer_id = '" . (int)$this->customer->getId() . "'");
			}			
			]]></add>
		</operation>
		
		
	</file>
	<file name="catalog/view/theme/*/template/common/header.tpl">
		<operation> <!-- linha 44 geral - adiciona javascript de mascara e opções  -->
			<search position="after" ><![CDATA[
			<?php echo $google_analytics; ?>
			]]></search>
			<add><![CDATA[
			<?php if ($this->config->get('dados_status')){ ?>
			<script type="text/javascript" src="catalog/view/javascript/jquery.maskedinput-1.3.min.js"></script>
			<script>
				 $(document).ready(function() {
				 
				  $("input[name='data_nascimento'] ").mask("99/99/9999");
				  $("input[name='ddd'] ").mask("(99)");
				  $("input[name='telephone'] ").mask("9999-9999?9");
				  $("input[name='fax'] ").mask("(99) 9999-9999");
				  $("input[name='postcode'] ").mask("99999-999");
				  $("input[name='cc_number'] ").mask("9999999999999?999999");
				  $("#cpf").mask("999.999.999-99");
				  $("#cnpj").mask("99.999.999/9999-99");
				  
				 
				/* formulário de criação de conta */
					if ($("#fisica").is(':checked')) {
						$('.pessoa_fisica').show();
						$('.pessoa_juridica').hide();    
					}
					if ($("#juridica").is(':checked')) {
						$('.pessoa_fisica').hide();
						$('.pessoa_juridica').show();  
					}
					$('#juridica').click( function() {
						$("#cpf").val("");
					$('.pessoa_fisica').hide();
						$('.pessoa_juridica').show();    
				});
					$('#fisica').click( function() {
						$("#cnpj").val("");
					$('.pessoa_fisica').show();
						$('.pessoa_juridica').hide();
				}); 
				});    
			</script> 
			<?php } ?>
			]]></add>
		</operation>
		
	</file>
	<!-- PEGA ESTADO -->
	<file name="catalog/model/localisation/zone.php">
		<operation error="skip"> <!-- linha 3 geral - função de autocompletar -->
			<search position="before" ><![CDATA[
                public function getZone($zone_id) {
			]]></search>
			<add><![CDATA[
			public function getZonesByEstado($estado) {
				if (strlen($estado)<=2) {
					$query = $this->db->query("SELECT zone_id FROM " . DB_PREFIX . "zone WHERE country_id = '30' AND code = '".$estado."' AND status = '1' ORDER BY name");
					$zone_id = $query->row["zone_id"];
				}else{
					$zone_id = "";
				}
				return $zone_id;
			}
			]]></add>
		</operation>    
	</file>		
	<file name="system/library/customer.php">
		<operation> <!-- linha 7 geral - adiciona ddd global -->
			<search position="before" ><![CDATA[
			private $telephone;
			]]></search>
			<add><![CDATA[
			private $ddd;	
			]]></add>
		</operation>
		
		<operation> <!-- linha 27 e 86 geral - adiciona ddd global -->
			<search position="before" ><![CDATA[
			$this->telephone = $customer_query->row['telephone'];
			]]></search>
			<add><![CDATA[
			$this->ddd = $customer_query->row['ddd'];
			]]></add>
		</operation>
		
		<operation><!-- linha 136 geral - função resgata DDD -->
			<search position="before" ><![CDATA[
			public function getTelephone() {
			]]></search>
			<add><![CDATA[
			public function getDDD() {
				return $this->ddd;
			}	
			]]></add>
		</operation>
		
		<operation> <!-- linha 162 geral - adiciona validação cpf e cnpj  -->
			<search position="before" ><![CDATA[
			public function getRewardPoints() {
			]]></search>
			<add><![CDATA[
			
				// Inicio validação de CPF e CNPJ fonte do código http://feloliveira.com.br/blog/validar-cpf-e-cnpj-em-php/
				private function replace($string){
					return $string = str_replace("/","", str_replace("-","",str_replace(".","",$string)));
				}
				private function check_fake($string, $length){
					for($i = 0; $i <= 9; $i++) {
						$fake = str_pad("", $length, $i);
						if($string === $fake)
							return(1);
					}
				}

				public function cpf($cpf = null) {
				    // Elimina possivel mascara
				    $cpf = $this->replace($cpf);
					$cpf = trim($cpf);
				     
				    // Verifica se o numero de digitos informados é igual a 11 
				    if (strlen($cpf) != 11) {
				        return false;
				    }
				    // Verifica se nenhuma das sequências invalidas abaixo 
				    // foi digitada. Caso afirmativo, retorna falso
				    else if ($cpf == '00000000000' || 
				        $cpf == '11111111111' || 
				        $cpf == '22222222222' || 
				        $cpf == '33333333333' || 
				        $cpf == '44444444444' || 
				        $cpf == '55555555555' || 
				        $cpf == '66666666666' || 
				        $cpf == '77777777777' || 
				        $cpf == '88888888888' || 
				        $cpf == '99999999999') {
				        return false;
				     // Calcula os digitos verificadores para verificar se o
				     // CPF é válido
				     } else {   
				         
				        for ($t = 9; $t < 11; $t++) {
				             
				            for ($d = 0, $c = 0; $c < $t; $c++) {
				                $d += $cpf{$c} * (($t + 1) - $c);
				            }
				            $d = ((10 * $d) % 11) % 10;
				            if ($cpf{$c} != $d) {
				                return false;
				            }
				        }
				 
				        return true;
				    }
				}

				public function cnpj($cnpj) {
					$cnpj = $this->replace($cnpj);
					$cnpj = trim($cnpj);
					if(empty($cnpj) || strlen($cnpj) != 14){
						return FALSE;
					}else{
						if($this->check_fake($cnpj, 14)){
							return FALSE;
						}else{
							$rev_cnpj = strrev(substr($cnpj, 0, 12));
							for($i = 0; $i <= 11; $i++) {
								$i == 0 ? $multiplier = 2 : $multiplier;
								$i == 8 ? $multiplier = 2 : $multiplier;
								$multiply = ($rev_cnpj[$i] * $multiplier);
								$sum = $sum + $multiply;
								$multiplier++;
							}
							$rest = $sum % 11;
							if($rest == 0 || $rest == 1)
								$dv1 = 0;
							else
								$dv1 = 11 - $rest; $sub_cnpj = substr($cnpj, 0, 12);
							$rev_cnpj = strrev($sub_cnpj.$dv1);
							unset($sum);
							for($i = 0; $i <= 12; $i++) {$i == 0 ? $multiplier = 2 : $multiplier;
								$i == 8 ? $multiplier = 2 : $multiplier;
								$multiply = ($rev_cnpj[$i] * $multiplier);
								$sum = $sum + $multiply;
								$multiplier++;
							}
							$rest = $sum % 11;
							if($rest == 0 || $rest == 1)
								$dv2 = 0;
							else
								$dv2 = 11 - $rest;if($dv1 == $cnpj[12] && $dv2 == $cnpj[13])
							return TRUE;
						else
						return FALSE;
						}
					}
				}
				// Fim validação de CPF e CNPJ fonte do código http://feloliveira.com.br/blog/validar-cpf-e-cnpj-em-php/
				
			
			]]></add>
		</operation>
		
	</file>
	
	<!-- BLOCO DE EDIÇÃO DE DADOS PELO ADMINISTRATIVO DO CLIENTE -->
	<file name="catalog/model/account/order.php">
		<operation> <!-- linha 75 - Carrega os campos novos campos direto do banco de dados na função getOrder($order_id) do model -->
			<search position="after"><![CDATA[
			'shipping_address_1'      => $order_query->row['shipping_address_1'],
			]]></search>
			<add><![CDATA[
			'shipping_numero'      => $order_query->row['shipping_numero'],
			'shipping_complemento'      => $order_query->row['shipping_complemento'],
			'payment_numero'      => $order_query->row['payment_numero'],
			'payment_complemento'      => $order_query->row['payment_complemento'],
			'payment_code'          => $order_query->row['payment_code'],
			'payment_url'          => $order_query->row['payment_url'],
			]]></add>
		</operation>
	</file>	
	
	<file name="catalog/model/account/address.php">
		<operation> <!-- linha 4 - adição de campo numero e complemento em addAddress -->
			<search position="replace" ><![CDATA[
			$this->db->query("INSERT INTO " . DB_PREFIX . "address SET customer_id = '" . (int)$this->customer->getId() . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', company = '" . $this->db->escape($data['company']) . "', company_id = '" . $this->db->escape(isset($data['company_id']) ? $data['company_id'] : '') . "', tax_id = '" . $this->db->escape(isset($data['tax_id']) ? $data['tax_id'] : '') . "', address_1 = '" . $this->db->escape($data['address_1']) . "', address_2 = '" . $this->db->escape($data['address_2']) . "', postcode = '" . $this->db->escape($data['postcode']) . "', city = '" . $this->db->escape($data['city']) . "', zone_id = '" . (int)$data['zone_id'] . "', country_id = '" . (int)$data['country_id'] . "'");
			]]></search>
			<add><![CDATA[
				if ($this->config->get('dados_status')){ 
					$this->db->query("INSERT INTO " . DB_PREFIX . "address SET customer_id = '" . (int)$this->customer->getId() . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = ' ', company = ' ', company_id = '', tax_id = '" . $this->db->escape(isset($data['tax_id']) ? $data['tax_id'] : '') . "', address_1 = '" . $this->db->escape($data['address_1']) . "', numero = '" . $this->db->escape($data['numero']) . "',complemento = '" . $this->db->escape($data['complemento']) . "', address_2 = '" . $this->db->escape($data['address_2']) . "', postcode = '" . $this->db->escape($data['postcode']) . "', city = '" . $this->db->escape($data['city']) . "', zone_id = '" . (int)$data['zone_id'] . "', country_id = '" . (int)$data['country_id'] . "'");
				}else{
					$this->db->query("INSERT INTO " . DB_PREFIX . "address SET customer_id = '" . (int)$this->customer->getId() . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', company = '" . $this->db->escape($data['company']) . "', company_id = '" . $this->db->escape(isset($data['company_id']) ? $data['company_id'] : '') . "', tax_id = '" . $this->db->escape(isset($data['tax_id']) ? $data['tax_id'] : '') . "', address_1 = '" . $this->db->escape($data['address_1']) . "', address_2 = '" . $this->db->escape($data['address_2']) . "', postcode = '" . $this->db->escape($data['postcode']) . "', city = '" . $this->db->escape($data['city']) . "', zone_id = '" . (int)$data['zone_id'] . "', country_id = '" . (int)$data['country_id'] . "'");
				}
				
			]]></add>
		</operation>
		<operation> <!-- linha 16 - carrega numero e complemento dentro da função editAddress() -->
			<search position="replace" ><![CDATA[
			$this->db->query("UPDATE " . DB_PREFIX . "address SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', company = '" . $this->db->escape($data['company']) . "', company_id = '" . $this->db->escape(isset($data['company_id']) ? $data['company_id'] : '') . "', tax_id = '" . $this->db->escape(isset($data['tax_id']) ? $data['tax_id'] : '') . "', address_1 = '" . $this->db->escape($data['address_1']) . "', address_2 = '" . $this->db->escape($data['address_2']) . "', postcode = '" . $this->db->escape($data['postcode']) . "', city = '" . $this->db->escape($data['city']) . "', zone_id = '" . (int)$data['zone_id'] . "', country_id = '" . (int)$data['country_id'] . "' WHERE address_id  = '" . (int)$address_id . "' AND customer_id = '" . (int)$this->customer->getId() . "'");
			]]></search>
			<add><![CDATA[
			if ($this->config->get('dados_status')){ 
				$this->db->query("UPDATE " . DB_PREFIX . "address SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '', company = '', company_id = '', tax_id = '" . $this->db->escape(isset($data['tax_id']) ? $data['tax_id'] : '') . "', address_1 = '" . $this->db->escape($data['address_1']) . "', numero = '" . $this->db->escape($data['numero']) . "', complemento = '" . $this->db->escape($data['complemento']) . "', address_2 = '" . $this->db->escape($data['address_2']) . "', postcode = '" . $this->db->escape($data['postcode']) . "', city = '" . $this->db->escape($data['city']) . "', zone_id = '" . (int)$data['zone_id'] . "', country_id = '" . (int)$data['country_id'] . "' WHERE address_id  = '" . (int)$address_id . "' AND customer_id = '" . (int)$this->customer->getId() . "'");
			}else{
				$this->db->query("UPDATE " . DB_PREFIX . "address SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', company = '" . $this->db->escape($data['company']) . "', company_id = '" . $this->db->escape(isset($data['company_id']) ? $data['company_id'] : '') . "', tax_id = '" . $this->db->escape(isset($data['tax_id']) ? $data['tax_id'] : '') . "', address_1 = '" . $this->db->escape($data['address_1']) . "', address_2 = '" . $this->db->escape($data['address_2']) . "', postcode = '" . $this->db->escape($data['postcode']) . "', city = '" . $this->db->escape($data['city']) . "', zone_id = '" . (int)$data['zone_id'] . "', country_id = '" . (int)$data['country_id'] . "' WHERE address_id  = '" . (int)$address_id . "' AND customer_id = '" . (int)$this->customer->getId() . "'");
			}			
			]]></add>
		</operation>
		<operation> <!-- linha 61 - carrega numero e complemento dentro da função getAddress() -->
			<search position="after" ><![CDATA[
			'address_1'      => $address_query->row['address_1'],
			]]></search>
			<add><![CDATA[

				'numero'      => $address_query->row['numero'],
                'complemento'      => $address_query->row['complemento'], 	

			]]></add>
		</operation>
		<operation> <!-- linha 118 - carrega numero e complemento dentro da função getAddresses() -->
			<search position="after" ><![CDATA[
			'address_1'      => $result['address_1'],
			]]></search>
			<add><![CDATA[

				'numero'      => $result['numero'],
                'complemento'      => $result['complemento'], 	

			]]></add>
		</operation>
		
		
	</file>

	<file name="catalog/controller/account/order.php">
		<operation error="skip">  <!-- linha 270 geral - direciona para a nova pagina de cadastro -->
			<search position="after" ><![CDATA[
                $this->data['payment_method'] = $order_info['payment_method'];
			]]></search>
			<add><![CDATA[
				$this->data['payment_code'] = $order_info['payment_code'];
				$this->data['payment_urls'] = $order_info['payment_url'];
				$this->data['order_status_id'] = $order_info['order_status_id'];
			]]></add>
		</operation>
	</file>
	
</modification>